{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xFbbF04341Ee13B58D6C6CDF2ed6bDBAc4F61fF56",
    "txHash": "0x70f42e9ef89af9128bd7f3372625586fbd17f81df277d0333e93fec3ef0bd5c5"
  },
  "proxies": [
    {
      "address": "0x7991f107FD2F2f7565B12FF31DeC9055882D0740",
      "txHash": "0x158cc26b29d31a8d209d06dd580676f532e460001e8adbd0e285622abcd91a70",
      "kind": "transparent"
    },
    {
      "address": "0x84De3a315eb0F1bd37207Af7BB3cfF890Ce111f7",
      "txHash": "0xd758cfb2913ed4e2509db6031e558296cdeb1974b8fb41e640d35b74b97417e5",
      "kind": "transparent"
    },
    {
      "address": "0x4f4f5b6B716915998B3607c85F3E232eb1Cff92D",
      "txHash": "0xd29853f8bac8ee5cc06e385cc7ca983a8bfbdfb316c88a9e605843ff27df52b9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5d42c54be47d2947952b1b33fb4f378ca3acd624731f66650cb1301bf9897073": {
      "address": "0x852Cf6865f6667335A3E70389F642edc096b71F3",
      "txHash": "0xfe788f367c897ec3bacbd19406c6aa8d3ed9b9b1f3c6946e7c29697762737121",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BaseCallGuard",
            "src": "lib/agau-common/contracts/common/BaseCallGuard.sol:11"
          },
          {
            "label": "_lockedBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokensLockable",
            "src": "contracts/token/extensions/TokensLockable.sol:15"
          },
          {
            "label": "_feesManager",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(FeesManager)3068",
            "contract": "MetalToken",
            "src": "contracts/token/MetalToken.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)126_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)70_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)14_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)39_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(FeesManager)3068": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a37dbe358dc7bc22d44e21988468b6673c536c05d61094f32959c863d37eb7a6": {
      "address": "0x6647795d8ebB05e00102A16Fc2280208043a83a9",
      "txHash": "0x4f2824d00272aaaf9ab4cc0542baadad38236fd835d2ed4d2284d0520865a057",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_authorized",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BaseCallGuard",
            "src": "lib/agau-common/contracts/common/BaseCallGuard.sol:11"
          },
          {
            "label": "_groupCount",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_enum(WhitelistGroupType)5161,t_uint256)",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:22"
          },
          {
            "label": "_feeDiscounts",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(WhitelistGroupType)5161,t_mapping(t_uint256,t_struct(Discount)5157_storage))",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:24"
          },
          {
            "label": "_userToGroup",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(WhitelistGroupType)5161,t_mapping(t_address,t_uint256))",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)47_storage",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:245"
          },
          {
            "label": "_txFeeRate",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:15"
          },
          {
            "label": "_minTxFee",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:17"
          },
          {
            "label": "_maxTxFee",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)47_storage",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:126"
          },
          {
            "label": "_feesWallet",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "FeesManager",
            "src": "contracts/management/FeesManager.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)70_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)14_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)39_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_enum(DiscountType)5166": {
            "label": "enum DiscountType",
            "members": [
              "None",
              "FlatPercentFee",
              "PercentDiscount"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(WhitelistGroupType)5161": {
            "label": "enum WhitelistGroupType",
            "members": [
              "None",
              "TxFee"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(WhitelistGroupType)5161,t_mapping(t_address,t_uint256))": {
            "label": "mapping(enum WhitelistGroupType => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(WhitelistGroupType)5161,t_mapping(t_uint256,t_struct(Discount)5157_storage))": {
            "label": "mapping(enum WhitelistGroupType => mapping(uint256 => struct Discount))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(WhitelistGroupType)5161,t_uint256)": {
            "label": "mapping(enum WhitelistGroupType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Discount)5157_storage)": {
            "label": "mapping(uint256 => struct Discount)",
            "numberOfBytes": "32"
          },
          "t_struct(Discount)5157_storage": {
            "label": "struct Discount",
            "members": [
              {
                "label": "discountType",
                "type": "t_enum(DiscountType)5166",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint248",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint248": {
            "label": "uint248",
            "numberOfBytes": "31"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "514bb671ac295012f88cf35a988d41e7b51a6d8554c756488966d1ed20523b98": {
      "address": "0xd6127E7c96377A282d66bc9eD18e7fE2F2EFD59C",
      "txHash": "0x7ac09b5d4bc4d8b252a15ca69d23a7d57d5347b4428242f0b48d05f17dab91bf",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_lockedBalance",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokensLockable",
            "src": "contracts/token/extensions/TokensLockable.sol:15"
          },
          {
            "label": "_authorizationGuard",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(AuthorizationGuard)5053",
            "contract": "TokensLockable",
            "src": "contracts/token/extensions/TokensLockable.sol:17"
          },
          {
            "label": "_authorizationGuard",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(AuthorizationGuard)5053",
            "contract": "AuthorizationGuardAccess",
            "src": "contracts/management/roles/AuthorizationGuardAccess.sol:8"
          },
          {
            "label": "_feesManager",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(FeesManager)3481",
            "contract": "MetalToken",
            "src": "contracts/token/MetalToken.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)66_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(AuthorizationGuard)5053": {
            "label": "contract AuthorizationGuard",
            "numberOfBytes": "20"
          },
          "t_contract(FeesManager)3481": {
            "label": "contract FeesManager",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e8151614368dbb508bfbec5f34f9ca60c5b57db4132069df6978750fd26b44e0": {
      "address": "0x1525e0977F069DD304A89F0d13c6c044123861BF",
      "txHash": "0x842f92e6021072e6d4b034a6c923b1b8101e79a1b2cacb575cfd94bdf81b443a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_authorizationGuard",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(AuthorizationGuard)5053",
            "contract": "AuthorizationGuardAccess",
            "src": "contracts/management/roles/AuthorizationGuardAccess.sol:8"
          },
          {
            "label": "_authorizationGuard",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(AuthorizationGuard)5053",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:24"
          },
          {
            "label": "_groupCount",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(GroupType)6472,t_uint256)",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:27"
          },
          {
            "label": "_feeDiscounts",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_enum(GroupType)6472,t_mapping(t_uint256,t_struct(Discount)6468_storage))",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:29"
          },
          {
            "label": "_userToGroup",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_enum(GroupType)6472,t_mapping(t_address,t_uint256))",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)47_storage",
            "contract": "FeesWhitelist",
            "src": "contracts/management/fees/FeesWhitelist.sol:282"
          },
          {
            "label": "_txFeeRate",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:18"
          },
          {
            "label": "_minTxFee",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:20"
          },
          {
            "label": "_maxTxFee",
            "offset": 0,
            "slot": "54",
            "type": "t_uint256",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:22"
          },
          {
            "label": "_authorizationGuard",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(AuthorizationGuard)5053",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)47_storage",
            "contract": "TxFeeManager",
            "src": "contracts/management/fees/TxFeeManager.sol:145"
          },
          {
            "label": "_feesWallet",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "FeesManager",
            "src": "contracts/management/FeesManager.sol:26"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_contract(AuthorizationGuard)5053": {
            "label": "contract AuthorizationGuard",
            "numberOfBytes": "20"
          },
          "t_enum(DiscountType)6477": {
            "label": "enum WhitelistTypes.DiscountType",
            "members": [
              "None",
              "FlatPercentFee",
              "PercentDiscount"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(GroupType)6472": {
            "label": "enum WhitelistTypes.GroupType",
            "members": [
              "None",
              "TxFee"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(GroupType)6472,t_mapping(t_address,t_uint256))": {
            "label": "mapping(enum WhitelistTypes.GroupType => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(GroupType)6472,t_mapping(t_uint256,t_struct(Discount)6468_storage))": {
            "label": "mapping(enum WhitelistTypes.GroupType => mapping(uint256 => struct WhitelistTypes.Discount))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(GroupType)6472,t_uint256)": {
            "label": "mapping(enum WhitelistTypes.GroupType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Discount)6468_storage)": {
            "label": "mapping(uint256 => struct WhitelistTypes.Discount)",
            "numberOfBytes": "32"
          },
          "t_struct(Discount)6468_storage": {
            "label": "struct WhitelistTypes.Discount",
            "members": [
              {
                "label": "discountType",
                "type": "t_enum(DiscountType)6477",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint248",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint248": {
            "label": "uint248",
            "numberOfBytes": "31"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
